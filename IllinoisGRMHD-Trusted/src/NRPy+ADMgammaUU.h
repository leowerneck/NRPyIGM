{
   const double tmp0 = (ADM_3METRIC[GYZ])*(ADM_3METRIC[GYZ]);
   const double tmp1 = ADM_3METRIC[GXX]*ADM_3METRIC[GYY];
   const double tmp2 = ADM_3METRIC[GXY]*ADM_3METRIC[GXZ];
   const double tmp3 = (ADM_3METRIC[GXY])*(ADM_3METRIC[GXY]);
   const double tmp4 = (ADM_3METRIC[GXZ])*(ADM_3METRIC[GXZ]);
   const double tmp5 = -ADM_3METRIC[GXX]*tmp0 - ADM_3METRIC[GYY]*tmp4 + 2*ADM_3METRIC[GYZ]*tmp2 + ADM_3METRIC[GZZ]*tmp1 - ADM_3METRIC[GZZ]*tmp3;
   const double tmp6 = 1.0/tmp5;
   ADM_3METRIC[GUPXX] = tmp6*(ADM_3METRIC[GYY]*ADM_3METRIC[GZZ] - tmp0);
   ADM_3METRIC[GUPXY] = tmp6*(-ADM_3METRIC[GXY]*ADM_3METRIC[GZZ] + ADM_3METRIC[GXZ]*ADM_3METRIC[GYZ]);
   ADM_3METRIC[GUPXZ] = tmp6*(ADM_3METRIC[GXY]*ADM_3METRIC[GYZ] - ADM_3METRIC[GXZ]*ADM_3METRIC[GYY]);
   ADM_3METRIC[GUPYY] = tmp6*(ADM_3METRIC[GXX]*ADM_3METRIC[GZZ] - tmp4);
   ADM_3METRIC[GUPYZ] = tmp6*(-ADM_3METRIC[GXX]*ADM_3METRIC[GYZ] + tmp2);
   ADM_3METRIC[GUPZZ] = tmp6*(tmp1 - tmp3);
   ADM_3METRIC[SQRTGAMMA] = sqrt(tmp5);
}
